#  
# Adding installation of NV blox in Docker
#
ARG BASE_IMAGE=ubuntu:22.04
FROM ${BASE_IMAGE}

## Compile & Install YDLidar SDK
RUN apt install cmake pkg-config
RUN apt-get install python3 swig
RUN apt-get install -y python-pip

# Adding the YD Lidar SDK
RUN git clone https://github.com/g0rd0n2007/YDLidar-SDK.git
RUN cd YDLidar-SDK && mkdir build && cd build && cmake .. && make && sudo make install
RUN cd /YDLidar-SDK && python setup.py build && python setup.py install

# GPIO Install
RUN apt install -y python3-pip
RUN pip3 install Jetson.GPIO

# Serial Com for Arduino
RUN apt-get update
RUN pip3 install pyserial

## Install nano
RUN apt-get install nano

### Install NAV2 BRINGUP
RUN apt update
RUN apt install ros-humble-nav2-bringup

### Install the essenstial ISAAC ROS Packages Permanent ###
### - Isaac ROS common 
### - Isaac NVBlox
# Set workspace environment variable early
ENV ISAAC_ROS_WS=/workspaces/isaac_ros-img

# Create workspace directory
WORKDIR ${ISAAC_ROS_WS}/src

# Clone Isaac ROS NVBlox and Common (with correct branch and submodules)
RUN git clone --recurse-submodules https://github.com/stargaze221/isaac_ros_nvblox.git && \
    git clone -b release-3.2 https://github.com/NVIDIA-ISAAC-ROS/isaac_ros_common.git

# Go back to workspace root
WORKDIR ${ISAAC_ROS_WS}

# Install system dependencies
RUN apt-get update && \
    rosdep update && \
    rosdep install --from-paths src --ignore-src -r -y --rosdistro humble

# # Build the workspace using a login shell to source ROS properly
# RUN bash -c "source /opt/ros/humble/setup.bash && \
#              colcon build --symlink-install"
### ---------------------------------------------------------

# For USB Resetting for Realsense Power Reset
RUN apt-get update && \
apt-get install -y uhubctl
RUN apt install -y usbutils

# Build and install usbreset
WORKDIR /tmp
RUN wget https://raw.githubusercontent.com/jkulesza/usbreset/master/usbreset.c && \
    gcc usbreset.c -o usbreset && \
    mv usbreset /usr/local/bin/ && \
    chmod 755 /usr/local/bin/usbreset && \
    rm usbreset.c

## Update the entrypoint.sh
COPY scripts/workspace-entrypoint.sh /usr/local/bin/scripts/
RUN chmod +x /usr/local/bin/scripts/*.sh || true